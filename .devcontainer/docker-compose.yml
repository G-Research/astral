version: '3'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ../..:/workspaces:cached
    ports:
      - 3000:3000
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root_token
      VAULT_CREATE_ROOT: true
      VAULT_ROOT_CA_MOUNT: pki
      VAULT_ROOT_CA_REF: root-ca
      VAULT_SSL_CERT: cert/vault.pem
      JWT_SIGNING_KEY: jwt_secret
      APP_REGISTRY_ADDR: http://app_registry:8800
      APP_REGISTRY_TOKEN: app_reg_token
    
  vault:
    image: hashicorp/vault:latest
    restart: unless-stopped
    ports:
      - 8200:8200
      - 8443:8443
    volumes:
      - ../cert:/vault/cert
    environment:
      VAULT_LOG_LEVEL: debug
      VAULT_DEV_ROOT_TOKEN_ID: root_token
      VAULT_LOCAL_CONFIG: >
        {
            "listener": [
                {
                    "tcp": {
                        "address": "0.0.0.0:8443",
                        "tls_disable": "0",
                        "tls_cert_file": "/vault/cert/vault.pem",
                        "tls_key_file": "/vault/cert/vault.key"
                    }
                }
            ],
            "default_lease_ttl": "168h",
            "max_lease_ttl": "720h"
        }

  oidc_provider:
    image: hashicorp/vault:latest
    restart: unless-stopped
    ports:
      - 8300:8300
      - 9443:9443
    volumes:
      - ../cert:/vault/cert
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root_token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8300
      VAULT_LOCAL_CONFIG: >
        {
            "listener": [
                {
                    "tcp": {
                        "address": "0.0.0.0:9443",
                        "tls_disable": "0",
                        "tls_cert_file": "/vault/cert/oidc_provider.pem",
                        "tls_key_file": "/vault/cert/oidc_provider.key"
                    }
                }
            ],
            "default_lease_ttl": "168h",
            "max_lease_ttl": "720h"
        }


  app_registry:
    image: node:latest
    restart: unless-stopped
    ports:
      - 8800:8800
    volumes:
      - .:/data
    command: >
      sh -c "npm install -g json-server@0.17.4 &&
             json-server /data/app_reg_db.json --routes /data/app_reg_routes.json --port 8800 --host 0.0.0.0"
